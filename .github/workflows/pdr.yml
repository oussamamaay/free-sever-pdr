name: RDP via Ngrok

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Download and setup Ngrok
      run: |
        Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive -Path ngrok.zip -DestinationPath .
        .\ngrok.exe authtoken 2ypH6AmaJTpCGN2UCUkX2yBfQGh_7MAhL9ERgG6mgZTdeLSiY

    - name: Create admin user and enable RDP
      run: |
        net user kamel123 MyStrong123 /add
        net localgroup administrators kamel123 /add
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

    - name: Start Ngrok tunnel in background
      shell: cmd
      run: start /b ngrok.exe tcp 3389

    - name: Wait for ngrok to initialize and get RDP address
      shell: pwsh
      run: |
        $tries = 0
        do {
          try {
            $response = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
            $success = $true
          } catch {
            Start-Sleep -Seconds 5
            $tries++
          }
        } while (-not $success -and $tries -lt 6)

        if (-not $success) {
          Write-Error "❌ Failed to connect to Ngrok API after multiple attempts."
          exit 1
        }

        $rdpUrl = $response.tunnels[0].public_url -replace "tcp://", ""
        Write-Output "✅ RDP is ready! Connect using this address:"
        Write-Output $rdpUrl
